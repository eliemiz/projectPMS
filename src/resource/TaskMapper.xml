<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pms.a03_dao.A12_TaskDao">
	<!-- public ArrayList<Task> getTaskList(Task sch) -->
	<resultMap type="task" id="taskList"/>
	<select id="getTaskList" resultMap="taskList" parameterType="task">
		SELECT t.id, p.name project_name, t.tracker, t.status, t.PRIORITY, t.subject, a.name name,
				start_date, due_date
		FROM task t, account a, PROJECT p
		WHERE t.subject LIKE '%'||#{subject}||'%'
		AND t.account_id = a.id
		AND t.PROJECT_ID = p.ID
		ORDER BY t.id desc
	</select>

	<!--public Task getTask(int id) -->
	<select id="getTask" resultType="task" parameterType="int">
		SELECT t.id, t.PARENT_ID, t.PROJECT_ID, t.ACCOUNT_ID,
				t.SUBJECT, t.DESCRIPTION, t.STATUS, t.PRIORITY, 
				t.CREATED_ON, t.UPDATED_ON,
				start_date, 
				due_date,
				t.ESTIMATED, t.DONE_RATIO, t.COMPLETED_ON,
				t.TRACKER, a.name name, p.name project_name
		FROM task t, account a, PROJECT p
		WHERE t.account_id = a.id
		AND t.PROJECT_ID = p.ID
		AND t.id = #{id}
	</select>
	
	<!-- 파일 public ArrayList<Attachment> fileInfo(int document_id); -->
	<select id="fileInfo" resultType="attachment" parameterType="int">
		select *
		from attachment
		where document_id = #{document_id}
	</select>
	
	<!-- public void insertTask(Task ins) -->
	<insert id="insertTask" parameterType="task">
		INSERT INTO TASK
		VALUES (TASK_seq.nextval, #{parent_id}, #{project_id}, #{account_id},
				#{subject}, #{description}, #{status}, #{priority}, 
				SYSDATE, SYSDATE, #{start_date}, #{due_date},
				#{estimated}, #{done_ratio}, SYSDATE, #{tracker}, #{backgroundColor})
	</insert>

	<!-- public void uploadFile(Attachment atins) : 파일 업로드 -->
	<insert id="uploadFile" parameterType="attachment">
		INSERT INTO attachment VALUES (
			ATTACHMENT_SEQ.nextval,#{document_type},task_seq.currval,#{filename},
			#{disk_filename},#{pathname},#{filesize},sysdate)
	</insert>
	
	<!-- public void updateTask(Task upt) 
	updated_on 추가함
	-->
	<update id="updateTask" parameterType="task">
		UPDATE TASK
			SET project_id = #{project_id},
				account_id = #{account_id},
				subject = #{subject},
				description = #{description},
				status = #{status},
				priority = #{priority},
				updated_on = sysdate,
				start_date = #{start_date},
				due_date = #{due_date},
				estimated = #{estimated},
				done_ratio = #{done_ratio},
				tracker = #{tracker}
			WHERE ID = #{id}
	</update>
	<!-- public void updateFile(HashMap<String, String> hs) -->
	<update id="updateFile" parameterType="hashMap">
		update ATTACHMENT
			set filename = #{filename},
				filesize = #{filesize}
		where document_id = #{document_id}
			and filename=#{orgFilename}
			and document_type = #{document_type}
	</update>
	
	<!-- public void deleteTask(int task_id) -->
	<delete id="deleteTask" parameterType="int">
		DELETE FROM TASK
		WHERE ID in (
 	 		SELECT ID
 	 		FROM TASK
 	 		START WITH ID=#{id}
 	 		CONNECT BY PRIOR ID = PARENT_ID
 	 	) 
	</delete>

	<!-- public void deleteFile(int id); -->
	<delete id="deleteFile" parameterType="int">
		delete from ATTACHMENT
		where document_id=#{document_id}
	</delete>


	<!-- comment -->
<!-- 	public void insertComment(Comment insc); // 댓글 입력 -->
 
	<insert id="insertComment" parameterType="comment">
		INSERT INTO COMMENTS VALUES (
		COMMENTS_SEQ.nextval,#{document_type},
		#{document_id},#{account_id},#{content},
		SYSDATE,SYSDATE)
	</insert> 
<!-- 	public ArrayList<Comment> commentInfo(int document_id); // 댓글 조회 -->

	<resultMap type="comment" id="comment"/>
	<select id="commentInfo" resultMap="comment" parameterType="int">
		select * 
		from comments 
 		where document_id = #{document_id} 
 	</select>
 		
 		
<!-- 	public void updateComment(Comment upt); // 댓글 수정 -->

<!-- 	public void deleteComment(int id); // 댓글 삭제 -->

	<!-- Calendar -->	
	<resultMap type="calen" id="calMap">
		<result property="start" column="start1"/>
		<result property="end" column="end1"/>
	</resultMap>
	<!-- public ArrayList<Calendar> calenList(int projectId) -->
	<select id="calenList" resultMap="calMap">
		SELECT t.id, t.parent_id groupId, t.subject title, a.name writer, t.description content,
				t.start_date start1, t.due_date end1, t.tracker, t.backgroundColor,
				1 as allDay, 'white' as borderColor, 'white' as textColor
		FROM task t, account a, project p
		WHERE t.PROJECT_ID = p.ID 
		AND t.ACCOUNT_ID = a.ID
		AND p.id = #{p.id}
	</select>
	
	<!-- Gantt -->
	<resultMap type="gantt" id="ganttMap"/>
	<!-- public ArrayList<GanttChart> ganttList(int projectId) -->
	<select id="ganttList" resultMap="ganttMap">
		SELECT t.id, t.TRACKER "type", t.subject text, t.start_date start_date,
				to_date(SUBSTR(t.due_date,0,10))-to_date(SUBSTR(t.START_DATE,0,10)) + 1 duration,
				t.PARENT_ID parent, t.DONE_RATIO/100 progress, 1 as "open"
		FROM task t, project p
		where p.id = t.project_id
		and p.id = #{p.id}
		ORDER BY t.id	
	</select>
	
	
	<!-- public ArrayList<TaskResult> getTaskResult(int projectId); -->
	<select id="getTaskResult" resultType="taskResult" parameterType="int">
		SELECT T.ID, T.SUBJECT, A.NAME, T.DUE_DATE, T.COMPLETED_ON FROM TASK T, ACCOUNT A 
			WHERE T.PROJECT_ID = #{projectId} AND T.ACCOUNT_ID = A.ID AND STATUS = '완료' 
			ORDER BY COMPLETED_ON DESC
	</select>
</mapper>


